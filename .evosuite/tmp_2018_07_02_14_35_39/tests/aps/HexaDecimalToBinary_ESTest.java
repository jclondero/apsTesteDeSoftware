/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 02 17:37:50 GMT 2018
 */

package aps;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import aps.HexaDecimalToBinary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class HexaDecimalToBinary_ESTest extends HexaDecimalToBinary_ESTest_scaffolding {

  @Test
  public void test0()  throws Throwable  {
      HexaDecimalToBinary hexaDecimalToBinary0 = new HexaDecimalToBinary();
      hexaDecimalToBinary0.completeDigits("u'lO'YYZctoaLD");
  }

  @Test
  public void test1()  throws Throwable  {
      HexaDecimalToBinary hexaDecimalToBinary0 = new HexaDecimalToBinary();
      // Undeclared exception!
      try { 
        hexaDecimalToBinary0.convert("|.vck(C]3\"");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"|.vck(C]3\"\"
         //
         assertThrownBy("java.lang.NumberFormatException", e);
      }
  }

  @Test
  public void test2()  throws Throwable  {
      HexaDecimalToBinary hexaDecimalToBinary0 = new HexaDecimalToBinary();
      // Undeclared exception!
      try { 
        hexaDecimalToBinary0.completeDigits((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("aps.HexaDecimalToBinary", e);
      }
  }

  @Test
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[6];
      HexaDecimalToBinary.main(stringArray0);
  }

  @Test
  public void test4()  throws Throwable  {
      HexaDecimalToBinary hexaDecimalToBinary0 = new HexaDecimalToBinary();
      hexaDecimalToBinary0.convert("BA");
  }

  @Test
  public void test5()  throws Throwable  {
      HexaDecimalToBinary hexaDecimalToBinary0 = new HexaDecimalToBinary();
      String string0 = hexaDecimalToBinary0.completeDigits("03");
      assertEquals("00000003", string0);
  }
}
